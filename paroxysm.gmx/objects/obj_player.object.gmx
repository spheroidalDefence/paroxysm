<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<object>
  <spriteName>spr_player_walk_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <maskName>&lt;undefined&gt;</maskName>
  <parentName>&lt;undefined&gt;</parentName>
  <events>
    <event enumb="0" eventtype="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animationSpeed = 0.1; //Pretty self-explantory&#13;
distanceApart = 2; //Pixels apart from collision with objects&#13;
&#13;
image_speed = animationSpeed;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="0" eventtype="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bool w = keyboard_check(ord("W"));&#13;
bool a = keyboard_check(ord("A"));&#13;
bool s = keyboard_check(ord("S"));&#13;
bool d = keyboard_check(ord("D"));&#13;
&#13;
//The movement "if else" block&#13;
//the "action_if_empty" function might need to be replaced&#13;
if(w &amp;&amp; !a &amp;&amp; !s &amp;&amp; !d){&#13;
	sprite_index = spr_player_walk_up;&#13;
	if(action_if_empty(x, y-distanceApart, obj_testWall)) y--;&#13;
} else&#13;
if(s &amp;&amp; !w &amp;&amp; !a &amp;&amp; !d){&#13;
	sprite_index = spr_player_walk_down;&#13;
	if(action_if_empty(x, y+distanceApart, obj_testWall)) y++;&#13;
} else&#13;
if(a &amp;&amp; !w &amp;&amp; !s &amp;&amp; !d){&#13;
	sprite_index = spr_player_walk_left;&#13;
	if(action_if_empty(x-distanceApart, y, obj_testWall)) x--;&#13;
} else&#13;
if(d &amp;&amp; !w &amp;&amp; !a &amp;&amp; !s){&#13;
	sprite_index = spr_player_walk_right;&#13;
	if(action_if_empty(x+distanceApart, y, obj_testWall)) x++;&#13;
} else&#13;
if(w &amp;&amp; a &amp;&amp; !s &amp;&amp; !d){&#13;
	sprite_index = spr_player_walk_upleft;&#13;
	if(action_if_empty(x, y-distanceApart, obj_testWall)) y--;&#13;
	if(action_if_empty(x-distanceApart, y, obj_testWall)) x--;&#13;
} else&#13;
if(w &amp;&amp; d &amp;&amp; !a &amp;&amp; !s){&#13;
	sprite_index = spr_player_walk_upright;&#13;
	if(action_if_empty(x, y-distanceApart, obj_testWall)) y--;&#13;
	if(action_if_empty(x+distanceApart, y, obj_testWall)) x++;&#13;
} else&#13;
if(s &amp;&amp; a &amp;&amp; !w &amp;&amp; !d){&#13;
	sprite_index = spr_player_walk_downleft;&#13;
	if(action_if_empty(x, y+distanceApart, obj_testWall)) y++;&#13;
	if(action_if_empty(x-distanceApart, y, obj_testWall)) x--;&#13;
} else&#13;
if(s &amp;&amp; d &amp;&amp; !w &amp;&amp; !a){&#13;
	sprite_index = spr_player_walk_downright;&#13;
	if(action_if_empty(x, y+distanceApart, obj_testWall)) y++;&#13;
	if(action_if_empty(x+distanceApart, y, obj_testWall)) x++;&#13;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
